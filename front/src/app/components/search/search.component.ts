import { ChangeDetectionStrategy, Component, OutputEmitterRef, output } from '@angular/core';
import { FormControl, ReactiveFormsModule } from '@angular/forms';
import { MatButtonModule } from '@angular/material/button';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatIconModule } from '@angular/material/icon';
import { MatInputModule } from '@angular/material/input';

@Component({
    selector: 'cve-search',
    standalone: true,
    templateUrl: './search.component.html',
    styleUrl: './search.component.scss',
    changeDetection: ChangeDetectionStrategy.OnPush,
    imports: [
        MatFormFieldModule,
        MatInputModule,
        ReactiveFormsModule,
        MatIconModule,
        MatButtonModule,
    ],
})
export class SearchComponent {
    readonly searchControl: FormControl<string | null> = new FormControl<string | null>(null);

    readonly search: OutputEmitterRef<string> = output<string>();

    handleEnterClickOrKeyboardDown(): void {
        if (this.searchControl.value) {
            this.search.emit(this.searchControl.value);
        }
    }
}
