import { Injectable } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { Cve } from '../../../../api/models/cve.model';
import { CveService } from '../../../../api/services/cve.service';

@Injectable()
export class CvesTableService {

    public readonly currentData$: Observable<Cve[]>;

    public readonly pending$: Observable<boolean>;

    private readonly currentData$$: BehaviorSubject<Cve[]> = new BehaviorSubject<Cve[]>([]);

    private readonly pending$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);

    constructor(
        private readonly cveService: CveService,
    ) {
        this.currentData$ = this.currentData$$.asObservable();
        this.pending$ = this.pending$$.asObservable();
    }

    public loadData(): void {
        this.pending$$.next(true);
        this.currentData$$.next([
            {
                cveId: '1',
                cpe: 'Github',
                url: 'www.github.com',
                description: 'Github failure',
                raw: {
                    field: 's',
                },
                lastModified: '2024-04-24T18:07:59.752Z'
            }
        ])
        // this.pending$$.next(false);
        this.cveService.getAllCves().subscribe({
            next: (values) => {
                this.currentData$$.next(values);
            },
            error: (err) => {
                // TODO notifications
                console.error(err);
            },
            complete: () => {
                this.pending$$.next(false);
            }
        })
    }

}
