import { AsyncPipe, DatePipe, NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, OnInit, Signal } from '@angular/core';
import { MatTableModule } from '@angular/material/table';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { Observable } from 'rxjs';
import { Cve } from '../../../../api/backend/models/cve.model';
import { CvesTableService } from './cves-table.service';
import { MatButtonModule } from '@angular/material/button';
import { TranslateModule } from '@ngx-translate/core';
import { LocaleService } from '../../../services/locale.service';

@Component({
    selector: 'cve-cves-table',
    standalone: true,
    templateUrl: './cves-table.component.html',
    styleUrl: './cves-table.component.scss',
    changeDetection: ChangeDetectionStrategy.OnPush,
    imports: [
        NgIf,
        AsyncPipe,
        DatePipe,
        MatTableModule,
        MatProgressSpinnerModule,
        MatButtonModule,
        TranslateModule,
    ],
    providers: [
        CvesTableService,
    ]
})
export class CvesTableComponent implements OnInit {
    public readonly currentData$: Observable<Cve[]> = this.cvesTableService.currentData$;

    public readonly pending$: Observable<boolean> = this.cvesTableService.pending$;

    public readonly displayedColumns: (keyof Cve)[] = ['cpe', 'description', 'lastModified', 'url'];

    public currentLocale: Signal<string> = this.localeService.currentLocale;

    constructor(
        private readonly cvesTableService: CvesTableService,
        private readonly localeService: LocaleService,
    ) {
    }

    public ngOnInit(): void {
        this.cvesTableService.loadData();
    }
}
